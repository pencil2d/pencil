# Travis-CI configuration file for SuperTuxKart modified by CandyFace for Pencil2D
#
# Configuration manual:
# http://docs.travis-ci.com/user/build-configuration/
#
# How to use TravisCI with C++ (Qt Test, C++11):
# https://github.com/richelbilderbeek/travis_qmake_gcc_cpp11_qt_qtests
#
language: cpp
compiler: g++
sudo: required
dist: trusty
osx_sdk: macosx10.12
os:
  - linux
  - osx

python:
 - "3.4"
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - ubuntu-sdk-team
    - trusty-media
    - sourceline: 'ppa:beineri/opt-qt591-trusty'
    packages:
    - g++-5
    - build-essential
    - qt59tools
    - qt59base
    - qt59multimedia
    - qt59svg
    - qt59xmlpatterns
    - bsdtar
    - ffmpeg

before_install:
  - 'if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update;
    brew install p7zip;
    brew install python3;
    brew install qt@5.9;
    brew link qt@5.9 --force;
  fi'

install:
  - pip freeze > requirements.txt
  - pip install -r requirements.txt
  - pip install -U setuptools
  - pip install -U virtualenvwrapper
  - pip install -U google-api-python-client
  - python3 -V
  - pip -V

before_script:
  - 'if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    . /opt/qt59/bin/qt59-env.sh;
    export DISPLAY=:99.0;
    sh -e /etc/init.d/xvfb start;
    echo "give xvfb some time to start";
    sleep 3;
  fi'
  - qmake --version


script:
  - mkdir "build" && cd build
  - qmake ../ PREFIX=/usr CONFIG+=GIT
  - make;

after_success:
  - echo "look for build folder and zip file"
  - ls
  - 'if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      make INSTALL_ROOT="${PWD}/Pencil2D" install;
      rm -rf Pencil2D/usr/lib;
      echo "Creating AppImage...";
      install -Dm755 /usr/bin/ffmpeg Pencil2D/usr/plugins/ffmpeg;
      curl -fsSLO https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage;
      chmod 755 linuxdeployqt-continuous-x86_64.AppImage;
      LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu/pulseaudio" ./linuxdeployqt-continuous-x86_64.AppImage Pencil2D/usr/share/applications/pencil2d.desktop -executable=Pencil2D/usr/plugins/ffmpeg -appimage;
      mv "Pencil2D-x86_64.AppImage" "pencil2d-linux-$(date +"%Y-%m-%d").AppImage";
     fi'
  - 'if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      echo "cleaning...";
      make clean;
      mv bin Pencil2D;
      echo "Fixing info.plist";
      cd Pencil2D;
      plutil -replace CFBundleExecutable -string Pencil2D Pencil2D.app/Contents/Info.plist;
      plutil -replace CFBundleIdentifier -string org.pencil2d.Pencil2D Pencil2D.app/Contents/Info.plist;

      echo "Copying ffmpeg plugin";
      mkdir Pencil2D.app/Contents/MacOS/plugins;
      wget -P Pencil2D.app/Contents/MacOS/plugins https://evermeet.cx/ffmpeg/ffmpeg-3.2.4.7z;
      7z x Pencil2D.app/Contents/MacOS/plugins/ffmpeg-3.2.4.7z -o"Pencil2D.app/Contents/MacOS/plugins";
      rm Pencil2D.app/Contents/MacOs/plugins/ffmpeg-3.2.4.7z;

      echo "Copying necessary Qt frameworks";
      macdeployqt Pencil2D.app;
      echo "applying macdeployqt fix";
      wget https://github.com/aurelien-rainone/macdeployqtfix/archive/master.zip; unzip -x master.zip; python $TRAVIS_BUILD_DIR/build/Pencil2D/macdeployqtfix-master/macdeployqtfix.py $TRAVIS_BUILD_DIR/build/Pencil2D/Pencil2D.app/Contents/MacOS/Pencil2D /usr/local/Cellar/qt/5.9.1/;
      echo "Removing files";
      rm -rf macdeployqtfix-master;
      rm master.zip;
      cd ..;
      echo "Zipping...";
      zip -r "pencil2d-mac-$(date +"%Y-%m-%d").zip" Pencil2D/;
    fi'
  - echo "zipping done"
  - ls

  # Upload to google drive
  - 'if [ "$TRAVIS_BRANCH" == "master" -o "$FORCE_NIGHTLY_UPLOAD" == "yes" ]; then
    echo "Initiate deployment on Google Drive";
    cd "$TRAVIS_BUILD_DIR/util";
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      python nightly-build-upload.py "$LINUX_NIGHTLY_PARENT" "$TRAVIS_BUILD_DIR/build/pencil2d-linux-$(date +"%Y-%m-%d").AppImage";
    fi;
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      python nightly-build-upload.py "$OSX_NIGHTLY_PARENT" "$TRAVIS_BUILD_DIR/build/pencil2d-mac-$(date +"%Y-%m-%d").zip";
    fi;
    echo "Operation done";
  fi'

after_script:
  - cd "$TRAVIS_BUILD_DIR/build"
  - pwd
  - ./tests/tests
